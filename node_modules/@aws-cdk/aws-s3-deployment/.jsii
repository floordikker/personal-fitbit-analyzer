{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudfront": "1.94.1",
    "@aws-cdk/aws-ec2": "1.94.1",
    "@aws-cdk/aws-iam": "1.94.1",
    "@aws-cdk/aws-lambda": "1.94.1",
    "@aws-cdk/aws-s3": "1.94.1",
    "@aws-cdk/aws-s3-assets": "1.94.1",
    "@aws-cdk/core": "1.94.1",
    "@aws-cdk/lambda-layer-awscli": "1.94.1",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudfront": {
      "submodules": {
        "@aws-cdk/aws-cloudfront.experimental": {
          "locationInModule": {
            "filename": "lib/index.ts",
            "line": 11
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront"
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/lambda-layer-awscli": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.LambdaLayer.AwsCli",
          "packageId": "Amazon.CDK.LambdaLayer.AwsCli"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-lambda-layer-awscli",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.lambdalayer.awscli"
        },
        "js": {
          "npm": "@aws-cdk/lambda-layer-awscli"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.lambda-layer-awscli",
          "module": "aws_cdk.lambda_layer_awscli"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Constructs for deploying contents to S3 buckets",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.24.0 (build b722f66)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "s3"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-s3-deployment",
  "readme": {
    "markdown": "# AWS S3 Deployment Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\n> __Status: Experimental__\n\nThis library allows populating an S3 bucket with the contents of .zip files\nfrom other S3 buckets or from local disk.\n\nThe following example defines a publicly accessible S3 bucket with web hosting\nenabled and populates it from a local directory on disk.\n\n```ts\nconst websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static' // optional prefix in destination bucket\n});\n```\n\nThis is what happens under the hood:\n\n1. When this stack is deployed (either via `cdk deploy` or via CI/CD), the\n   contents of the local `website-dist` directory will be archived and uploaded\n   to an intermediary assets bucket. If there is more than one source, they will\n   be individually uploaded.\n2. The `BucketDeployment` construct synthesizes a custom CloudFormation resource\n   of type `Custom::CDKBucketDeployment` into the template. The source bucket/key\n   is set to point to the assets bucket.\n3. The custom resource downloads the .zip archive, extracts it and issues `aws\n   s3 sync --delete` against the destination bucket (in this case\n   `websiteBucket`). If there is more than one source, the sources will be\n   downloaded and merged pre-deployment at this step.\n\n## Supported sources\n\nThe following source types are supported for bucket deployments:\n\n - Local .zip file: `s3deploy.Source.asset('/path/to/local/file.zip')`\n - Local directory: `s3deploy.Source.asset('/path/to/local/directory')`\n - Another bucket: `s3deploy.Source.bucket(bucket, zipObjectKey)`\n\nTo create a source from a single file, you can pass `AssetOptions` to exclude\nall but a single file:\n\n - Single file: `s3deploy.Source.asset('/path/to/local/directory', { exclude: ['**', '!onlyThisFile.txt'] })`\n\n## Retain on Delete\n\nBy default, the contents of the destination bucket will **not** be deleted when the\n`BucketDeployment` resource is removed from the stack or when the destination is\nchanged. You can use the option `retainOnDelete: false` to disable this behavior,\nin which case the contents will be deleted.\n\n## Prune\n\nBy default, files in the destination bucket that don't exist in the source will be deleted\nwhen the `BucketDeployment` resource is created or updated. You can use the option `prune: false` to disable\nthis behavior, in which case the files will not be deleted.\n\n```ts\nnew s3deploy.BucketDeployment(this, 'DeployMeWithoutDeletingFilesOnDestination', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket,\n  prune: false,\n});\n```\n\nThis option also enables you to specify multiple bucket deployments for the same destination bucket & prefix,\neach with its own characteristics. For example, you can set different cache-control headers\nbased on file extensions:\n\n```ts\nnew BucketDeployment(this, 'BucketDeployment', {\n  sources: [Source.asset('./website', { exclude: ['index.html'] })],\n  destinationBucket: bucket,\n  cacheControl: [CacheControl.fromString('max-age=31536000,public,immutable')],\n  prune: false,\n});\n\nnew BucketDeployment(this, 'HTMLBucketDeployment', {\n  sources: [Source.asset('./website', { exclude: ['*', '!index.html'] })],\n  destinationBucket: bucket,\n  cacheControl: [CacheControl.fromString('max-age=0,no-cache,no-store,must-revalidate')],\n  prune: false,\n});\n```\n\n## Objects metadata\n\nYou can specify metadata to be set on all the objects in your deployment.\nThere are 2 types of metadata in S3: system-defined metadata and user-defined metadata.\nSystem-defined metadata have a special purpose, for example cache-control defines how long to keep an object cached.\nUser-defined metadata are not used by S3 and keys always begin with `x-amz-meta-` (this prefix is added automatically).\n\nSystem defined metadata keys include the following:\n\n- cache-control\n- content-disposition\n- content-encoding\n- content-language\n- content-type\n- expires\n- server-side-encryption\n- storage-class\n- website-redirect-location\n- ssekms-key-id\n- sse-customer-algorithm\n\n```ts\nconst websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: ServerSideEncryption.AES_256,\n  cacheControl: [CacheControl.setPublic(), CacheControl.maxAge(cdk.Duration.hours(1))],\n});\n```\n\n## CloudFront Invalidation\n\nYou can provide a CloudFront distribution and optional paths to invalidate after the bucket deployment finishes.\n\n```ts\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst bucket = new s3.Bucket(this, 'Destination');\n\n// Handles buckets whether or not they are configured for website hosting.\nconst distribution = new cloudfront.Distribution(this, 'Distribution', {\n  defaultBehavior: { origin: new origins.S3Origin(bucket) },\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWithInvalidation', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: bucket,\n  distribution,\n  distributionPaths: ['/images/*.png'],\n});\n```\n\n## Memory Limit\n\nThe default memory limit for the deployment resource is 128MiB. If you need to\ncopy larger files, you can use the `memoryLimit` configuration to specify the\nsize of the AWS Lambda resource handler.\n\n> NOTE: a new AWS Lambda handler will be created in your stack for each memory\n> limit configuration.\n\n## Notes\n\n- This library uses an AWS CloudFormation custom resource which about 10MiB in\n  size. The code of this resource is bundled with this library.\n- AWS Lambda execution time is limited to 15min. This limits the amount of data\n  which can be deployed into the bucket by this timeout.\n- When the `BucketDeployment` is removed from the stack, the contents are retained\n  in the destination bucket ([#952](https://github.com/aws/aws-cdk/issues/952)).\n- Bucket deployment _only happens_ during stack create/update. This means that\n  if you wish to update the contents of the destination, you will need to\n  change the source s3 key (or bucket), so that the resource will be updated.\n  This is inline with best practices. If you use local disk assets, this will\n  happen automatically whenever you modify the asset, since the S3 key is based\n  on a hash of the asset contents.\n\n## Development\n\nThe custom resource is implemented in Python 3.6 in order to be able to leverage\nthe AWS CLI for \"aws sync\". The code is under [`lib/lambda`](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/aws-s3-deployment/lib/lambda) and\nunit tests are under [`test/lambda`](https://github.com/aws/aws-cdk/tree/master/packages/%40aws-cdk/aws-s3-deployment/test/lambda).\n\nThis package requires Python 3.6 during build time in order to create the custom\nresource Lambda bundle and test it. It also relies on a few bash scripts, so\nmight be tricky to build on Windows.\n\n## Roadmap\n\n - [ ] Support \"blue/green\" deployments ([#954](https://github.com/aws/aws-cdk/issues/954))\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-s3-deployment",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.S3.Deployment",
      "packageId": "Amazon.CDK.AWS.S3.Deployment"
    },
    "java": {
      "maven": {
        "artifactId": "s3-deployment",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.s3.deployment"
    },
    "js": {
      "npm": "@aws-cdk/aws-s3-deployment"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-s3-deployment",
      "module": "aws_cdk.aws_s3_deployment"
    }
  },
  "types": {
    "@aws-cdk/aws-s3-deployment.BucketDeployment": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-s3-deployment.BucketDeployment",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/bucket-deployment.ts",
          "line": 183
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.BucketDeploymentProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bucket-deployment.ts",
        "line": 182
      },
      "name": "BucketDeployment"
    },
    "@aws-cdk/aws-s3-deployment.BucketDeploymentProps": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-s3-deployment.BucketDeploymentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket-deployment.ts",
        "line": 16
      },
      "name": "BucketDeploymentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The S3 bucket to sync the contents of the zip file to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 25
          },
          "name": "destinationBucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The sources from which to deploy the contents of this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 20
          },
          "name": "sources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3-deployment.ISource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined cache-control metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 103
          },
          "name": "cacheControl",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined cache-disposition metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 109
          },
          "name": "contentDisposition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined content-encoding metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 115
          },
          "name": "contentEncoding",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined content-language metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 121
          },
          "name": "contentLanguage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined content-type metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 127
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"/\" (unzip to root of the destination bucket)",
            "stability": "experimental",
            "summary": "Key prefix in the destination bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 32
          },
          "name": "destinationKeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No invalidation occurs",
            "remarks": "Files in the distribution's edge caches will be invalidated after\nfiles are uploaded to the destination bucket.",
            "stability": "experimental",
            "summary": "The CloudFront distribution using the destination bucket as an origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 64
          },
          "name": "distribution",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IDistribution"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All files under the destination bucket key prefix will be invalidated.",
            "stability": "experimental",
            "summary": "The file paths to invalidate in the CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 71
          },
          "name": "distributionPaths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The objects in the distribution will not expire.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined expires metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 133
          },
          "name": "expires",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Expiration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "128",
            "remarks": "If you are deploying large files, you will need to increase this number\naccordingly.",
            "stability": "experimental",
            "summary": "The amount of memory (in MiB) to allocate to the AWS Lambda function which replicates the files from the CDK bucket to the destination bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 82
          },
          "name": "memoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No user metadata is set",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#UserMetadata",
            "stability": "experimental",
            "summary": "User-defined object metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 96
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "see": "https://docs.aws.amazon.com/cli/latest/reference/s3/sync.html",
            "stability": "experimental",
            "summary": "If this is set to false, files in the destination bucket that do not exist in the asset, will NOT be deleted during deployment (create/update)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 42
          },
          "name": "prune",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - when resource is deleted/updated, files are retained",
            "remarks": "NOTICE: if this is set to \"false\" and destination bucket/prefix is updated,\nall files in the previous destination will first be deleted and then\nuploaded to the new destination location. This could have availablity\nimplications on your users.",
            "stability": "experimental",
            "summary": "If this is set to \"false\", the destination files will be deleted when the resource is deleted or the destination is updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 55
          },
          "name": "retainOnDelete",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role is automatically created",
            "stability": "experimental",
            "summary": "Execution role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 89
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Server side encryption is not used.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined x-amz-server-side-encryption metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 139
          },
          "name": "serverSideEncryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3-deployment.ServerSideEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined x-amz-server-side-encryption-aws-kms-key-id metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 157
          },
          "name": "serverSideEncryptionAwsKmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "remarks": "Warning: This is not a useful parameter until this bug is fixed: https://github.com/aws/aws-cdk/issues/6080",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html#sse-c-how-to-programmatically-intro",
            "stability": "experimental",
            "summary": "System-defined x-amz-server-side-encryption-customer-algorithm metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 164
          },
          "name": "serverSideEncryptionCustomerAlgorithm",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default storage-class for the bucket is used.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined x-amz-storage-class metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 145
          },
          "name": "storageClass",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3-deployment.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "stability": "experimental",
            "summary": "The VPC network to place the deployment lambda handler in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 171
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy if not specified",
            "remarks": "Only used if 'vpc' is supplied.",
            "stability": "experimental",
            "summary": "Where in the VPC to place the deployment lambda handler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 179
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No website redirection.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
            "stability": "experimental",
            "summary": "System-defined x-amz-website-redirect-location metadata to be set on all objects in the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 151
          },
          "name": "websiteRedirectLocation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3-deployment.CacheControl": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
        "stability": "experimental",
        "summary": "Used for HTTP cache-control header, which influences downstream caches."
      },
      "fqn": "@aws-cdk/aws-s3-deployment.CacheControl",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bucket-deployment.ts",
        "line": 287
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 296
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "s",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 294
          },
          "name": "maxAge",
          "parameters": [
            {
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 288
          },
          "name": "mustRevalidate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 289
          },
          "name": "noCache",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 290
          },
          "name": "noTransform",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 293
          },
          "name": "proxyRevalidate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 292
          },
          "name": "setPrivate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 291
          },
          "name": "setPublic",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 295
          },
          "name": "sMaxAge",
          "parameters": [
            {
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.CacheControl"
            }
          },
          "static": true
        }
      ],
      "name": "CacheControl",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 298
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3-deployment.DeploymentSourceContext": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Bind context for ISources."
      },
      "fqn": "@aws-cdk/aws-s3-deployment.DeploymentSourceContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 24
      },
      "name": "DeploymentSourceContext",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The role for the handler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 28
          },
          "name": "handlerRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3-deployment.Expires": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "docs": {
        "deprecated": "use core.Expiration",
        "remarks": "Does NOT influence deletion of the object.",
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
        "stability": "deprecated",
        "summary": "Used for HTTP expires header, which influences downstream caches."
      },
      "fqn": "@aws-cdk/aws-s3-deployment.Expires",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bucket-deployment.ts",
        "line": 331
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Expire once the specified duration has passed since deployment time."
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 348
          },
          "name": "after",
          "parameters": [
            {
              "docs": {
                "summary": "the duration to wait before expiring."
              },
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.Expires"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Expire at the specified date."
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 336
          },
          "name": "atDate",
          "parameters": [
            {
              "docs": {
                "summary": "date to expire at."
              },
              "name": "d",
              "type": {
                "primitive": "date"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.Expires"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Expire at the specified timestamp."
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 342
          },
          "name": "atTimestamp",
          "parameters": [
            {
              "docs": {
                "summary": "timestamp in unix milliseconds."
              },
              "name": "t",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.Expires"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "deprecated"
          },
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 350
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "s",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.Expires"
            }
          },
          "static": true
        }
      ],
      "name": "Expires",
      "properties": [
        {
          "docs": {
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-deployment.ts",
            "line": 352
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3-deployment.ISource": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a source for bucket deployments."
      },
      "fqn": "@aws-cdk/aws-s3-deployment.ISource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 34
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Binds the source to a bucket deployment."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 39
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The construct tree context."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "context",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3-deployment.DeploymentSourceContext"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.SourceConfig"
            }
          }
        }
      ],
      "name": "ISource"
    },
    "@aws-cdk/aws-s3-deployment.ServerSideEncryption": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
        "stability": "experimental",
        "summary": "Indicates whether server-side encryption is enabled for the object, and whether that encryption is from the AWS Key Management Service (AWS KMS) or from Amazon S3 managed encryption (SSE-S3)."
      },
      "fqn": "@aws-cdk/aws-s3-deployment.ServerSideEncryption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket-deployment.ts",
        "line": 306
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "AES_256"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "AWS_KMS"
        }
      ],
      "name": "ServerSideEncryption"
    },
    "@aws-cdk/aws-s3-deployment.Source": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "docs": {
        "remarks": "Usage:\n\n     Source.bucket(bucket, key)\n     Source.asset('/local/path/to/directory')\n     Source.asset('/local/path/to/a/file.zip')",
        "stability": "experimental",
        "summary": "Specifies bucket deployment source."
      },
      "fqn": "@aws-cdk/aws-s3-deployment.Source",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 52
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Uses a local asset as the deployment source."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 75
          },
          "name": "asset",
          "parameters": [
            {
              "docs": {
                "summary": "The path to a local .zip file or a directory."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3-assets.AssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.ISource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Uses a .zip file stored in an S3 bucket as the source for the destination bucket contents."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 58
          },
          "name": "bucket",
          "parameters": [
            {
              "docs": {
                "summary": "The S3 Bucket."
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "docs": {
                "summary": "The S3 object key of the zip file with contents."
              },
              "name": "zipObjectKey",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3-deployment.ISource"
            }
          },
          "static": true
        }
      ],
      "name": "Source"
    },
    "@aws-cdk/aws-s3-deployment.SourceConfig": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-s3-deployment.SourceConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 9
      },
      "name": "SourceConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The source bucket to deploy from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 13
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "An S3 object key in the source bucket that points to a zip file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 18
          },
          "name": "zipObjectKey",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3-deployment.StorageClass": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#SysMetadata",
        "stability": "experimental",
        "summary": "Storage class used for storing the object."
      },
      "fqn": "@aws-cdk/aws-s3-deployment.StorageClass",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket-deployment.ts",
        "line": 315
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "REDUCED_REDUNDANCY"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "STANDARD_IA"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ONEZONE_IA"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "INTELLIGENT_TIERING"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "GLACIER"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "DEEP_ARCHIVE"
        }
      ],
      "name": "StorageClass"
    },
    "@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata": {
      "assembly": "@aws-cdk/aws-s3-deployment",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket-deployment.ts",
        "line": 355
      },
      "name": "UserDefinedObjectMetadata"
    }
  },
  "version": "1.94.1",
  "fingerprint": "P3mWfFk02KU1X34H2k9mcnhaKAqKho8ToU6l/y2HtGc="
}
